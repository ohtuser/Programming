#include<bits/stdc++.h>
using namespace std;
#define max 100
vector<int> graph[max];
vector<bool> visited;
int n,m;
void bfs(int s){
    queue<int> q;
    q.push(s);
    visited[s]=true;

    while(!q.empty()){
        int v=q.front();
        q.pop();
        for(int i : graph[v]){
            if(!visited[i]){
                visited[i]=true;
                q.push(i);
            }
        }
    }
}
int main(){
    cin >> n >> m;
    for(int i=0;i<m;i++){
        int x,y; cin >> x >> y;
        graph[x].push_back(y);
        graph[y].push_back(x);
    }
    visited.assign(n+1,false);
    int source,destination; 
	cin >> source >> destination;
    bfs(source);
    if(!visited[destination]) 
		cout << "no path found" << endl;
    else{
        cout << "path found";
    }
}
